[{"D:\\pluto\\packages\\local-client\\src\\index.tsx":"1","D:\\pluto\\packages\\local-client\\src\\components\\cell-list.tsx":"2","D:\\pluto\\packages\\local-client\\src\\state\\index.ts":"3","D:\\pluto\\packages\\local-client\\src\\hooks\\use-typed-selector.ts":"4","D:\\pluto\\packages\\local-client\\src\\components\\add-cell.tsx":"5","D:\\pluto\\packages\\local-client\\src\\components\\cell-list-item.tsx":"6","D:\\pluto\\packages\\local-client\\src\\state\\store.ts":"7","D:\\pluto\\packages\\local-client\\src\\state\\cell.ts":"8","D:\\pluto\\packages\\local-client\\src\\hooks\\use-actions.ts":"9","D:\\pluto\\packages\\local-client\\src\\components\\code-cell.tsx":"10","D:\\pluto\\packages\\local-client\\src\\components\\text-editor.tsx":"11","D:\\pluto\\packages\\local-client\\src\\components\\action-bar.tsx":"12","D:\\pluto\\packages\\local-client\\src\\state\\reducers\\index.ts":"13","D:\\pluto\\packages\\local-client\\src\\state\\action-creators\\index.ts":"14","D:\\pluto\\packages\\local-client\\src\\components\\resizable.tsx":"15","D:\\pluto\\packages\\local-client\\src\\components\\code-editor.tsx":"16","D:\\pluto\\packages\\local-client\\src\\components\\preview.tsx":"17","D:\\pluto\\packages\\local-client\\src\\state\\reducers\\cellsReducer.ts":"18","D:\\pluto\\packages\\local-client\\src\\state\\reducers\\bundlesReducer.ts":"19","D:\\pluto\\packages\\local-client\\src\\state\\action-types\\index.ts":"20","D:\\pluto\\packages\\local-client\\src\\bundler\\index.ts":"21","D:\\pluto\\packages\\local-client\\src\\bundler\\plugins\\fetch-plugin.ts":"22","D:\\pluto\\packages\\local-client\\src\\bundler\\plugins\\unpkg-path-plugin.ts":"23","D:\\pluto\\packages\\local-client\\src\\state\\middlewares\\saving-middleware.ts":"24"},{"size":451,"mtime":1628342294109,"results":"25","hashOfConfig":"26"},{"size":851,"mtime":1628318608638,"results":"27","hashOfConfig":"26"},{"size":130,"mtime":1610476314000,"results":"28","hashOfConfig":"26"},{"size":182,"mtime":1610468471000,"results":"29","hashOfConfig":"26"},{"size":1143,"mtime":1628233335990,"results":"30","hashOfConfig":"26"},{"size":733,"mtime":1610484338000,"results":"31","hashOfConfig":"26"},{"size":289,"mtime":1628319244666,"results":"32","hashOfConfig":"26"},{"size":119,"mtime":1610396390000,"results":"33","hashOfConfig":"26"},{"size":336,"mtime":1628176098207,"results":"34","hashOfConfig":"26"},{"size":2858,"mtime":1628226807695,"results":"35","hashOfConfig":"26"},{"size":1356,"mtime":1628219785465,"results":"36","hashOfConfig":"26"},{"size":984,"mtime":1610481353000,"results":"37","hashOfConfig":"26"},{"size":301,"mtime":1628170306028,"results":"38","hashOfConfig":"26"},{"size":2257,"mtime":1628317560173,"results":"39","hashOfConfig":"26"},{"size":1707,"mtime":1628229791993,"results":"40","hashOfConfig":"26"},{"size":2090,"mtime":1628229692020,"results":"41","hashOfConfig":"26"},{"size":1467,"mtime":1610384684000,"results":"42","hashOfConfig":"26"},{"size":2422,"mtime":1628317664048,"results":"43","hashOfConfig":"26"},{"size":896,"mtime":1628173803917,"results":"44","hashOfConfig":"26"},{"size":396,"mtime":1628317144726,"results":"45","hashOfConfig":"26"},{"size":948,"mtime":1628225431539,"results":"46","hashOfConfig":"26"},{"size":1797,"mtime":1609453365000,"results":"47","hashOfConfig":"26"},{"size":830,"mtime":1609447184000,"results":"48","hashOfConfig":"26"},{"size":874,"mtime":1628320086070,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"8fqwmj",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"D:\\pluto\\packages\\local-client\\src\\index.tsx",[],["102","103"],"D:\\pluto\\packages\\local-client\\src\\components\\cell-list.tsx",["104"],"import { Fragment, useEffect } from \"react\";\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport CellListItem from \"./cell-list-item\";\nimport AddCell from \"./add-cell\";\nimport { useActions } from \"../hooks/use-actions\";\nimport \"./cell-list.css\";\n\nconst CellList: React.FC = () => {\n  const cells = useTypedSelector(({ cells: { order, data } }) =>\n    order.map((id) => data[id])\n  );\n  const { fetchCells } = useActions();\n  useEffect(() => {\n    fetchCells();\n  }, []);\n\n  const renderedCells = cells.map((cell) => (\n    <Fragment key={cell.id}>\n      <CellListItem cell={cell} />\n      <AddCell previousCellId={cell.id} />\n    </Fragment>\n  ));\n\n  return (\n    <div className=\"cell-list\">\n      <AddCell forceVisible={cells.length === 0} previousCellId={null} />\n      {renderedCells}\n    </div>\n  );\n};\n\nexport default CellList;\n","D:\\pluto\\packages\\local-client\\src\\state\\index.ts",[],"D:\\pluto\\packages\\local-client\\src\\hooks\\use-typed-selector.ts",[],"D:\\pluto\\packages\\local-client\\src\\components\\add-cell.tsx",[],"D:\\pluto\\packages\\local-client\\src\\components\\cell-list-item.tsx",[],"D:\\pluto\\packages\\local-client\\src\\state\\store.ts",[],"D:\\pluto\\packages\\local-client\\src\\state\\cell.ts",[],"D:\\pluto\\packages\\local-client\\src\\hooks\\use-actions.ts",[],"D:\\pluto\\packages\\local-client\\src\\components\\code-cell.tsx",["105","106"],"import { useEffect } from \"react\";\nimport CodeEditor from \"./code-editor\";\nimport Preview from \"./preview\";\n\nimport Resizable from \"./resizable\";\nimport { Cell } from \"../state\";\nimport { useActions } from \"../hooks/use-actions\";\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport \"./code-cell.css\";\n\ninterface CodeCellProps {\n  cell: Cell;\n}\n\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\n  const { updateCell, createBundle } = useActions();\n  const bundle = useTypedSelector((state) => state.bundles[cell.id]);\n  const combinedCode = useTypedSelector((state) => {\n    const { data, order } = state.cells;\n    const orderedCells = order.map((id) => data[id]);\n    const showFunc = ` \n        import _React from 'react';\n        import _ReactDOM from 'react-dom';\n        var view =(value)=>{\n          \n          if(typeof value==='object'){\n            if(value.$$typeof &&value.props){\n              _ReactDOM.render(value, document.querySelector('#root'))\n            }else{\n              document.querySelector('#root').innerHTML =JSON.stringify(value)\n            }\n            \n          }else{\n            document.querySelector('#root').innerHTML=value\n        \n          }\n       \n        }\n      `;\n    const showFuncNoop = \"var view = ()=>{}\";\n    const combinedCode = [];\n    for (let c of orderedCells) {\n      if (c.type === \"code\") {\n        if (c.id === cell.id) {\n          combinedCode.push(showFunc);\n        } else {\n          combinedCode.push(showFuncNoop);\n        }\n        combinedCode.push(c.content);\n      }\n      if (c.id === cell.id) {\n        break;\n      }\n    }\n    return combinedCode;\n  });\n  console.log(combinedCode);\n\n  useEffect(() => {\n    if (!bundle) {\n      createBundle(cell.id, combinedCode.join(\"\\n\"));\n      return;\n    }\n    const timer = setTimeout(async () => {\n      createBundle(cell.id, combinedCode.join(\"\\n\"));\n    }, 750);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [combinedCode.join(\"\\n\"), cell.id, createBundle]);\n\n  return (\n    <Resizable direction=\"vertical\">\n      <div\n        style={{\n          height: \"calc(100% - 10px)\",\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n      >\n        <Resizable direction=\"horizontal\">\n          <CodeEditor\n            initialValue={cell.content}\n            onChange={(value) => updateCell(cell.id, value)}\n          />\n        </Resizable>\n        <div className=\"progress-wrapper\">\n          {!bundle || bundle.loading ? (\n            <div className=\"progress-cover\">\n              <progress className=\"progress is-small is-primary\" max=\"100\">\n                Loading\n              </progress>\n            </div>\n          ) : (\n            <Preview code={bundle.code} err={bundle.err} />\n          )}\n        </div>\n      </div>\n    </Resizable>\n  );\n};\n\nexport default CodeCell;\n","D:\\pluto\\packages\\local-client\\src\\components\\text-editor.tsx",[],"D:\\pluto\\packages\\local-client\\src\\components\\action-bar.tsx",[],"D:\\pluto\\packages\\local-client\\src\\state\\reducers\\index.ts",[],"D:\\pluto\\packages\\local-client\\src\\state\\action-creators\\index.ts",[],"D:\\pluto\\packages\\local-client\\src\\components\\resizable.tsx",[],"D:\\pluto\\packages\\local-client\\src\\components\\code-editor.tsx",[],"D:\\pluto\\packages\\local-client\\src\\components\\preview.tsx",[],"D:\\pluto\\packages\\local-client\\src\\state\\reducers\\cellsReducer.ts",[],"D:\\pluto\\packages\\local-client\\src\\state\\reducers\\bundlesReducer.ts",[],"D:\\pluto\\packages\\local-client\\src\\state\\action-types\\index.ts",[],"D:\\pluto\\packages\\local-client\\src\\bundler\\index.ts",[],"D:\\pluto\\packages\\local-client\\src\\bundler\\plugins\\fetch-plugin.ts",[],["107","108"],"D:\\pluto\\packages\\local-client\\src\\bundler\\plugins\\unpkg-path-plugin.ts",[],"D:\\pluto\\packages\\local-client\\src\\state\\middlewares\\saving-middleware.ts",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":15,"column":6,"nodeType":"115","endLine":15,"endColumn":8,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"117","line":71,"column":6,"nodeType":"115","endLine":71,"endColumn":54,"suggestions":"118"},{"ruleId":"113","severity":1,"message":"119","line":71,"column":7,"nodeType":"120","endLine":71,"endColumn":30},{"ruleId":"109","replacedBy":"121"},{"ruleId":"111","replacedBy":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCells'. Either include it or remove the dependency array.","ArrayExpression",["125"],"React Hook useEffect has missing dependencies: 'bundle' and 'combinedCode'. Either include them or remove the dependency array.",["126"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["123"],["124"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [fetchCells]",{"range":"131","text":"132"},"Update the dependencies array to be: [bundle, cell.id, combinedCode, createBundle]",{"range":"133","text":"134"},[485,487],"[fetchCells]",[1971,2019],"[bundle, cell.id, combinedCode, createBundle]"]